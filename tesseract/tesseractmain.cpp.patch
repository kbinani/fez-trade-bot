--- tesseractmain.cpp	Sat Oct 22 11:40:50 2011
+++ tesseractmain.cpp	Tue May  1 18:29:32 2012
@@ -59,10 +59,9 @@
   // Make the order of args a bit more forgiving than it used to be.
   const char* lang = "eng";
   const char* image = NULL;
-  const char* output = NULL;
   tesseract::PageSegMode pagesegmode = tesseract::PSM_AUTO;
   int arg = 1;
-  while (arg < argc && (output == NULL || argv[arg][0] == '-')) {
+  while (arg < argc) {
     if (strcmp(argv[arg], "-l") == 0 && arg + 1 < argc) {
       lang = argv[arg + 1];
       ++arg;
@@ -71,12 +70,10 @@
       ++arg;
     } else if (image == NULL) {
       image = argv[arg];
-    } else if (output == NULL) {
-      output = argv[arg];
     }
     ++arg;
   }
-  if (output == NULL) {
+  if (image == NULL) {
     fprintf(stderr, _("Usage:%s imagename outputbase [-l lang] "
                       "[-psm pagesegmode] [configfile...]\n"), argv[0]);
     fprintf(stderr,
@@ -99,7 +96,6 @@
 
   tesseract::TessBaseAPI  api;
 
-  api.SetOutputName(output);
   api.Init(argv[0], lang, tesseract::OEM_DEFAULT,
            &(argv[arg]), argc - arg, NULL, NULL, false);
   // We have 2 possible sources of pagesegmode: a config file and
@@ -116,9 +112,6 @@
   // but that doesn't work.
   if (api.GetPageSegMode() == tesseract::PSM_SINGLE_BLOCK)
     api.SetPageSegMode(pagesegmode);
-  printf("Tesseract Open Source OCR Engine v%s with Leptonica\n",
-           tesseract::TessBaseAPI::Version());
-
 
   FILE* fin = fopen(image, "rb");
   if (fin == NULL) {
@@ -137,21 +130,10 @@
   STRING text_out;
   if (!api.ProcessPages(image, NULL, 0, &text_out)) {
     printf("Error during processing.\n");
-  }
-  bool output_hocr = false;
-  api.GetBoolVariable("tessedit_create_hocr", &output_hocr);
-  bool output_box = false;
-  api.GetBoolVariable("tessedit_create_boxfile", &output_box);
-  STRING outfile = output;
-  outfile += output_hocr ? ".html" : output_box ? ".box" : ".txt";
-  FILE* fout = fopen(outfile.string(), "wb");
-  if (fout == NULL) {
-    printf("Cannot create output file %s\n", outfile.string());
     exit(1);
   }
-  fwrite(text_out.string(), 1, text_out.length(), fout);
-  fclose(fout);
 
+  printf( text_out.string() );
   return 0;                      // Normal exit
 }
 
